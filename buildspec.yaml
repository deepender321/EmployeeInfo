version: 0.2

env:
  variables:
    ECR_REPOSITORY: "employee-info"  # Your ECR repository name
    AWS_ACCOUNT_ID: "381492133980"   # Your AWS Account ID
    AWS_REGION: "us-east-1"          # Your AWS region
    IMAGE_TAG: "latest"              # Docker image tag
    REPO_URI: "381492133980.dkr.ecr.us-east-1.amazonaws.com/employee-info"  # Full ECR repo URI

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "Installing Docker..."
      - yum install -y docker
      - service docker start
      - docker --version

  pre_build:
    commands:
      - echo "Retrieving authentication token for ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPO_URI
      - echo "ECR login successful."

  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t employee-info .  # Local tag
      - echo "Tagging Docker image for ECR..."
      - docker tag employee-info:latest $REPO_URI:$IMAGE_TAG
      - echo "Pushing Docker image to ECR..."
      - docker push $REPO_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "Generating ECS task definition..."
      - |
        TASK_DEFINITION_JSON=$(cat <<EOF
        {
          "family": "employee-info-task-definition",
          "networkMode": "awsvpc",
          "requiresCompatibilities": ["FARGATE"],
          "cpu": "256",
          "memory": "512",
          "executionRoleArn": "arn:aws:iam::381492133980:role/ecsTaskExecutionRole",
          "containerDefinitions": [
            {
              "name": "employee-info",
              "image": "$REPO_URI:$IMAGE_TAG",
              "memory": 512,
              "cpu": 256,
              "essential": true,
              "portMappings": [
                {
                  "containerPort": 8080,
                  "protocol": "tcp"
                }
              ]
            }
          ]
        }
        EOF
        )
      - echo "$TASK_DEFINITION_JSON" > task-definition.json
      - echo "Registering ECS task definition..."
      - aws ecs register-task-definition --cli-input-json file://task-definition.json

artifacts:
  files:
    - task-definition.json

cache:
  paths:
    - "~/.m2/**/*"
